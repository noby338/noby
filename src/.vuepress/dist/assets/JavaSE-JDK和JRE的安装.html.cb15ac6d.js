import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as t,a,d as n,b as i,e,r as c}from"./app.6de2405d.js";const p={},r=e('<h2 id="jdk-jre和jvm" tabindex="-1"><a class="header-anchor" href="#jdk-jre和jvm" aria-hidden="true">#</a> JDK，JRE和JVM</h2><ul><li>定义 <ul><li>JDK (Java Development Kit) 是太阳微系统针对Java开发人员发布的免费软件开发工具包（SDK，Software development kit）。自从Java推出以来，JDK已经成为使用最广泛的Java SDK。(JDK=JVM+运行所需核心类库+调试所需各种工具)</li><li>JRE (Java Runtime Environment) ，java运行环境，普通用户并不需要安装JDK来运行Java程序，而只需要安装JRE。而程序开发者必须安装JDK来编译、调试程序。(JRE=JVM+运行所需核心类库)</li><li>JVM (Java virtual machine) 意为Java虚拟机，主要负责运行Java程序，不管什么操作系统，只要安装了Java虚拟机就可以运行Java程序，这也就是为什么Java跨平台的原因。</li></ul></li></ul><div class="custom-container tip"><p class="custom-container-title">为什么需要他们？</p><p>任何的Java集成开发环境（IDE）（写Java程序用的软件），如Idea、Eclipse，都是基于本地已安装的JDK和JRE。JRE的作用是提供本系统运行Java程序运行所需的环境，而JDK是提供编写Java程序所需的各种开发工具，而JVM是各种系统上运行的虚拟机。 类似我们Android手机无法运行FC游戏一样，需要一个模拟器（小鸡模拟器），来在Android上模拟出“小霸王游戏机”的硬件，运行各种FC游戏，同样，因为Java为一门跨平台语言，它的运行需要硬件的支持，如果只为没有JVM的存在则无法在windows运行Java程序，同样， 要在MacOS中运行Java程序则需要在MacOS中安装其平台对应的JVM。如此，同样的Java代码经过不同平台的JVM“翻译”即可在他们的不同系统中运行。Java源代码的运行需要两步。第一步，将编写好的.java文件（源代码）通过javac.exe编译为.class文件（字节码）。第二步，通过java.exe程序运行 class文件。</p></div><h2 id="jdk-和-jre-的安装" tabindex="-1"><a class="header-anchor" href="#jdk-和-jre-的安装" aria-hidden="true">#</a> JDK 和 JRE 的安装</h2><h3 id="前置准备" tabindex="-1"><a class="header-anchor" href="#前置准备" aria-hidden="true">#</a> 前置准备</h3>',5),d=a("li",null,"在D盘下创建文件夹，取名为java，并在java文件夹下创建两个文件夹，分别取名为jdk和jre",-1),m={href:"https://www.oracle.com/java/technologies/downloads/archive/",target:"_blank",rel:"noopener noreferrer"},u=e(`<h3 id="jdk的安装" tabindex="-1"><a class="header-anchor" href="#jdk的安装" aria-hidden="true">#</a> JDK的安装</h3><ol><li>点击java开发工具安装包</li><li>点击“下一步”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182659243.png" alt="image-20221220182659243"></p><ol start="3"><li>点击“更改”，修改安装到D:\\java\\jdk文件夹</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182725069.png" alt="image-20221220182725069"></p><ol start="4"><li>点击“下一步”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182740205.png" alt="image-20221220182740205"></p><ol start="5"><li>等待安装完成</li></ol><h3 id="jre的安装" tabindex="-1"><a class="header-anchor" href="#jre的安装" aria-hidden="true">#</a> JRE的安装</h3><ol><li>点击“更改”，将JRE安装的到D:\\java\\jre</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182807748.png" alt="image-20221220182807748"></p><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182825725.png" alt="image-20221220182825725"></p><ol start="2"><li>点击“关闭”安装完成</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182839060.png" alt="image-20221220182839060"></p><h3 id="jdk环境变量配置" tabindex="-1"><a class="header-anchor" href="#jdk环境变量配置" aria-hidden="true">#</a> JDK环境变量配置</h3><div class="custom-container tip"><p class="custom-container-title">什么是环境变量？已经安装了JDK和JRE为什么还需要配置他们的环境变量？</p><p>前面我们安装了JDK和JRE，意味着我们可以使用他们的.exe应用程序来运行和编译Java程序，虽然目前我们安装了JDK和JRE，但仍然不可以直接使用，比如：打开cmd 在其中输入notepad.exe，是不是windows直接打开了记事本（notepad.exe就是记事本的应用程序），但直接输入java，会提示“&#39;java&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件。”说明不能直接运行java.exe程序。因为notepad.exe为windows系统自带的应用，系统为其设置了环境变量，可以直接打开。而java.exe 不是系统应用，如果要运行，需要告诉windows java.exe 存放的位置。输入完整路径即可执行除系统外的三方应用，如: D:\\Develop\\Java\\jdk1.8\\bin\\java.exe 。（注意自己的java.exe的存放路径）。环境变量的意义就是告诉系统某个.exe存在在系统的哪一个路径下，以方便系统可以省略路径而直接运行 <img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220190409483.png" alt="image-20221220190409483"></p></div><ol><li>在计算机/电脑图标上右键-&gt;属性，打开计算机属性</li><li>选择“高级系统设置”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182905793.png" alt="image-20221220182905793"></p><ol start="3"><li>选择“环境变量”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182919601.png" alt="image-20221220182919601"></p><ol start="4"><li>选择系统环境变量下的 “新建”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182930798.png" alt="image-20221220182930798"></p><ol start="5"><li>指定变量名为：JAVA_HOME 变量值为jdk的安装目录，然后点击确定</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183001457.png" alt="image-20221220183001457"></p><ol start="6"><li>再新建一个环境变量，变量名为：CLASSPATH 值为：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar;</li></ol><div class="custom-container warning"><p class="custom-container-title">注意</p><p>.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar; 最前面有个点</p></div><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183107808.png" alt="image-20221220183107808"></p><ol start="7"><li>点击确定保存</li><li>在系统环境变量中找到path，双击</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183116294.png" alt="image-20221220183116294"></p><ol start="9"><li>点击“新建”，增加以下两个值 <ol><li><code>%JAVA_HOME%\\jre\\bin</code></li><li><code>%JAVA_HOME%\\bin</code></li></ol></li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183129618.png" alt="image-20221220183129618"></p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果是win7操作系统，在原变量值的最后面加上 ;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin然后一路确定，配置完毕</p></div><ol start="10"><li>打开cmd窗口输入java -version指令，看到以下内容表示JDK完全安装成功</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183257185.png" alt="image-20221220183257185"></p><h2 id="java程序的执行流程" tabindex="-1"><a class="header-anchor" href="#java程序的执行流程" aria-hidden="true">#</a> java程序的执行流程</h2><ol><li>利用记事本新建Hello.txt文件，并在其中填入以下代码</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>保存退出后，把该文件的.txt后缀改为.java</li><li>打开cmd输入以下命令，执行编译(生成 Hello.class 字节码文件)： <ul><li><code>javac Hello.java</code></li></ul></li><li>cmd输入以下命令，运行字节码文件： <ul><li><code>java Hello</code></li></ul></li><li>控制台输出 Hello! ，运行成功。</li></ol>`,38);function v(g,h){const s=c("ExternalLinkIcon");return l(),t("div",null,[r,a("ol",null,[d,a("li",null,[n("下载windows对应的java8开发工具安装包 "),a("a",m,[n("java官网"),i(s)])])]),u])}const j=o(p,[["render",v],["__file","JavaSE-JDK和JRE的安装.html.vue"]]);export{j as default};
