const e=JSON.parse('{"key":"v-66006272","path":"/codenotes/javase/day19%20%E5%A4%9A%E7%BA%BF%E7%A8%8B.html","title":"day19 多线程","lang":"zh-CN","frontmatter":{"title":"day19 多线程","icon":"write","category":["JavaSE"],"tag":["JavaSE"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"多线程 进程：一个运行的程序，是系统进行资源分配和调用的独立单位; 线程：进程中的单个顺序控制流，是一条执行路径; 单线程：一个进程只有一个执行路径; 多线程：一个进程有多个执行路径; 并发：同一个时刻，多个任务交替执行; 并行：同一个时刻，多个任务同时执行; 线程的调度模型; 分时调度模型：多个任务交替执行的过程中，所有线程轮流获得CPU的使用权，平...","head":[["meta",{"property":"og:url","content":"https://noby.site/codenotes/javase/day19%20%E5%A4%9A%E7%BA%BF%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Noby"}],["meta",{"property":"og:title","content":"day19 多线程"}],["meta",{"property":"og:description","content":"多线程 进程：一个运行的程序，是系统进行资源分配和调用的独立单位; 线程：进程中的单个顺序控制流，是一条执行路径; 单线程：一个进程只有一个执行路径; 多线程：一个进程有多个执行路径; 并发：同一个时刻，多个任务交替执行; 并行：同一个时刻，多个任务同时执行; 线程的调度模型; 分时调度模型：多个任务交替执行的过程中，所有线程轮流获得CPU的使用权，平..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"JavaSE"}]]},"excerpt":"","headers":[{"level":2,"title":"多线程","slug":"多线程","link":"#多线程","children":[{"level":3,"title":"Thread类","slug":"thread类","link":"#thread类","children":[]},{"level":3,"title":"Runable接口(用的最多)","slug":"runable接口-用的最多","link":"#runable接口-用的最多","children":[]},{"level":3,"title":"Callable接口","slug":"callable接口","link":"#callable接口","children":[]},{"level":3,"title":"线程安全","slug":"线程安全","link":"#线程安全","children":[]},{"level":3,"title":"同步锁","slug":"同步锁","link":"#同步锁","children":[]},{"level":3,"title":"死锁","slug":"死锁","link":"#死锁","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.26,"words":2779},"filePathRelative":"codenotes/javase/day19 多线程.md"}');export{e as data};
